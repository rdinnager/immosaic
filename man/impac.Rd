% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/impac.R
\name{impac}
\alias{impac}
\title{Make a packed image mosaic}
\usage{
impac(
  im,
  width = 1024,
  height = 800,
  mask = NULL,
  weights = NULL,
  preferred = NULL,
  max_num_tries = 100,
  scales = c(rep(0.5, 2), rep(0.25, 4), rep(0.15, 8)),
  scaler = {     if (!.success & .try == 1 & .np < (.i * 0.5)) {         mscale <-
    min(.s)         c(.s, rep(mscale/2, floor(1/mscale)))     }     else {         .s    
    } },
  max_images = 1000,
  min_scale = 0.05,
  bg = "transparent",
  show_every = 25,
  progress = TRUE,
  start_image = NULL,
  xychooser = NULL,
  modifier = NULL,
  terminater = NULL,
  ...
)
}
\arguments{
\item{im}{Can be either a character vector of image
file names (format must be compatible with \code{\link[imager:load.image]{imager::load.image()}}),
a list of \code{\link[imager:cimg]{imager::cimg}} objects, or a function that generates
an image when evaluated. The function can take a single argument,
which is the current iteration of the packing algorithm. Can also
be specified as an \code{rlang} style lambda syntax (see \code{\link[rlang:as_function]{rlang::as_function()}}).}

\item{width}{Width in pixels of produced image}

\item{height}{Height in pixels of produced image}

\item{mask}{An optional masking image.}

\item{weights}{Vector of Weights to apply to each image. Higher weighted
images will  be packed first and so will tend to be larger. This vector
will be recycled.}

\item{preferred}{An alternate way to specify images to pack first, as
a character vector of names or file names (only works if \code{im} is a
vector of image file name or a list of \code{\link[imager:cimg]{imager::cimg}} objects).}

\item{max_num_tries}{Maximum number of times to try packing an image
onto the canvas before giving up.}

\item{scales}{A vector of starting scaling factors to randomly choose
from for each image.}

\item{scaler}{A function or expression (function-like), which returns
a new vector of scaling factors to use. If the vector has length 1, then
it is assumed to be the scaling factor for the current iteration, if longer,
a scaling factor will be randomly sampled from the vector for the current
iteration.}

\item{max_images}{The maximum number of images to pack before stopping.}

\item{min_scale}{The minimum scale factor to use. If the algorithm
generates a scale factor this small (via \code{scaler}), packing will stop.
ignored if \code{terminater} is not \code{NULL}.}

\item{bg}{The background colour for the campus, default: "transparent"}

\item{show_every}{Show the intermediate packed image after every
\code{show_every} images are packed. Set to 0 to not show intermediates.}

\item{progress}{Should progress be printed as the algorithm runs?}

\item{start_image}{An optional image to start the packing with. If not
\code{NULL}, the \code{width} and \code{height} arguments will be ignored and the
dimensions of the starting image used instead. Can be an \code{imager::cimg}
object, a path to an image in png or jpg format or an \code{impac} object.}

\item{...}{Further arguments passed on the \code{im}, if it is function.}
}
\value{
A packed image mosaic, as a \code{\link[imager:cimg]{imager::cimg}} object.
}
\description{
A simple greedy algorithm tries to pack as many images
into a larger image as possible, taking into account
transparency, if available (recommended).
}
\examples{
plot(
  impac(
    function(i) imager::draw_circle(
      imager::imfill(500, 500, val = c(0, 0, 0, 0)),
      250, 250, radius = runif(1, 150, 250),
      color = matrix(grDevices::col2rgb(sample(grDevices::rainbow(100), 1), alpha = TRUE), nrow = 1)
    ),
    width = 400, height = 400,
    max_images = 10, bg = "white"
  )$image
)
}
